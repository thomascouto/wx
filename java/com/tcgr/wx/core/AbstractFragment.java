package com.tcgr.wx.core;import android.app.SearchManager;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.os.Parcelable;import android.support.v4.app.Fragment;import android.support.v4.view.GestureDetectorCompat;import android.support.v7.view.ActionMode;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.support.v7.widget.SearchView;import android.text.InputType;import android.view.GestureDetector;import android.view.LayoutInflater;import android.view.Menu;import android.view.MenuInflater;import android.view.MenuItem;import android.view.MotionEvent;import android.view.View;import android.view.ViewGroup;import com.tcgr.wx.R;import com.tcgr.wx.adapter.Adapter;import com.tcgr.wx.ui.activity.WxActivity;/** * AbstractFragment * * @author Thomas on 06/04/16. */public abstract class AbstractFragment extends Fragment implements RecyclerView.OnItemTouchListener, ActionMode.Callback,        SearchView.OnQueryTextListener {    private ActionMode myActionMode;    protected RecyclerView recyclerView;    private Parcelable listState;    protected Adapter myAdapter;    protected SearchView searchView;//    protected MyCursorAdapter cursorAdapter;    protected String lastQuery;    GestureDetectorCompat gestureDetector;    public AbstractFragment() {        super();    }    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setHasOptionsMenu(true);    }    @Override    public abstract View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState);    @Override    public void onViewCreated(View view, Bundle savedInstanceState) {        recyclerView = (RecyclerView) view.findViewById(R.id.recycler_view);        recyclerView.setHasFixedSize(true);        recyclerView.addOnItemTouchListener(this);        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));        gestureDetector = new GestureDetectorCompat(getContext(), new RecyclerViewGestureListener());    }    @Override    public void onPause() {        super.onPause();        listState = recyclerView.getLayoutManager().onSaveInstanceState();    }    @Override    public void onResume() {        super.onResume();        if (listState != null) {            recyclerView.setAdapter(myAdapter);            recyclerView.getLayoutManager().onRestoreInstanceState(listState);        }    }    @Override    public void onPrepareOptionsMenu(Menu menu) {        MenuItem searchItem = menu.findItem(R.id.action_search);        SearchManager searchManager = (SearchManager) getActivity().getSystemService(Context.SEARCH_SERVICE);        if (searchItem != null) {            searchView = (SearchView) searchItem.getActionView();            searchView.setSearchableInfo(searchManager.getSearchableInfo(getActivity().getComponentName()));            searchView.setOnQueryTextListener(this);            searchView.setSubmitButtonEnabled(true);            searchView.setInputType(InputType.TYPE_TEXT_FLAG_CAP_CHARACTERS);            searchView.setOnCloseListener(new SearchView.OnCloseListener() {                @Override                public boolean onClose() {                    lastQuery = searchView.getQuery().toString();                    return false;                }            });        }    }    @Override    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {        inflater.inflate(R.menu.searchview, menu);    }    @Override    public boolean onQueryTextSubmit(String query) {        searchView.clearFocus();        return false;    }    @Override    public boolean onQueryTextChange(String newText) {        return false;    }    @Override    public boolean onCreateActionMode(ActionMode mode, Menu menu) {        MenuInflater inflater = mode.getMenuInflater();        inflater.inflate(R.menu.context_menu_share, menu);        return true;    }    @Override    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {        return false;    }    @Override    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {        switch (item.getItemId()) {            case R.id.action_mode_share:                String shareableAdapter = myAdapter.getShareableAdapter();                Intent sendIntent = new Intent();                sendIntent.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_TOP);                sendIntent.setAction(Intent.ACTION_SEND);                sendIntent.putExtra(Intent.EXTRA_TEXT, shareableAdapter);                sendIntent.setType("text/plain");                startActivity(Intent.createChooser(sendIntent, getString(R.string.title_activity_main)));                break;        }        mode.finish();        return false;    }    @Override    public void onDestroyActionMode(ActionMode mode) {        myActionMode = null;        myAdapter.clearSelections();    }    @Override    public boolean onInterceptTouchEvent(RecyclerView rv, MotionEvent e) {        return gestureDetector.onTouchEvent(e);    }    @Override    public void onTouchEvent(RecyclerView rv, MotionEvent e) {}    @Override    public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {}    private void myToggleSelection(int idx) {        myAdapter.toggleSelection(idx);        int count = myAdapter.getSelectedItemCount();        if (count == 0) {            myActionMode.finish();        } else {            String title = getResources().getQuantityString(R.plurals.selected_count, count, count);            myActionMode.setTitle(title);        }    }    class RecyclerViewGestureListener extends GestureDetector.SimpleOnGestureListener {        @Override        public void onLongPress(MotionEvent e) {            View view = recyclerView.findChildViewUnder(e.getX(), e.getY());            if (view != null) {                if (myActionMode == null) {                    myActionMode = ((WxActivity) getActivity()).startSupportActionMode(AbstractFragment.this);                }                int idx = recyclerView.getChildAdapterPosition(view);                myToggleSelection(idx);            }        }    }}