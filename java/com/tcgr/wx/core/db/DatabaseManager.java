package com.tcgr.wx.core.db;import android.content.Context;import android.database.sqlite.SQLiteDatabase;import java.util.concurrent.atomic.AtomicInteger;public class DatabaseManager {    private AtomicInteger mOpenCounter = new AtomicInteger();    private static DatabaseManager instance;    private static DataBaseHelper mDatabaseHelper;    private SQLiteDatabase mDatabase;    public static synchronized void initializeInstance(Context context) {        if (instance == null) {            instance = new DatabaseManager();            mDatabaseHelper = new DataBaseHelper(context);        }    }    public static synchronized DatabaseManager getInstance() {        if (instance == null) {            throw new IllegalStateException(DatabaseManager.class.getSimpleName() +                    " is not initialized, call initializeInstance(..) method first.");        }        return instance;    }    public synchronized SQLiteDatabase openDatabase() {        if (mOpenCounter.incrementAndGet() == 1) {            // Opening new database            mDatabase = mDatabaseHelper.getWritableDatabase();        }        return mDatabase;    }    public synchronized void closeDatabase() {        if (mOpenCounter.decrementAndGet() == 0) {            // Closing database            mDatabase.close();        }    }}