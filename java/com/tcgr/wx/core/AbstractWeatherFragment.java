package com.tcgr.wx.core;import android.database.Cursor;import android.net.Uri;import android.os.Bundle;import android.support.v4.view.GestureDetectorCompat;import android.support.v4.widget.SwipeRefreshLayout;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.support.v7.widget.SearchView;import android.view.Menu;import android.view.View;import com.tcgr.wx.R;import com.tcgr.wx.adapter.MyCursorAdapter;import com.tcgr.wx.core.db.DbSchema;import com.tcgr.wx.core.interfaces.Constants;import com.tcgr.wx.core.interfaces.CountListener;import com.tcgr.wx.ui.fragment.MetarFragment;/** * * Created by thomas on 10/04/16. */public abstract class AbstractWeatherFragment extends AbstractFragment implements SwipeRefreshLayout.OnRefreshListener, SearchView.OnSuggestionListener {    protected SwipeRefreshLayout swipeLayout;    protected CountListener listener;    protected MyCursorAdapter cursorAdapter;    @Override    public void onViewCreated(View view, Bundle savedInstanceState) {        swipeLayout = (SwipeRefreshLayout) view.findViewById(R.id.swipe_refresh);        swipeLayout.setColorSchemeResources(android.R.color.holo_green_light, android.R.color.holo_orange_light, android.R.color.holo_red_light);        swipeLayout.setOnRefreshListener(this);        LinearLayoutManager llm = new LinearLayoutManager(getContext());        recyclerView = (RecyclerView) view.findViewById(R.id.recycler_view);        recyclerView.setHasFixedSize(true);        recyclerView.setLayoutManager(llm);        recyclerView.addOnItemTouchListener(this);        gestureDetector = new GestureDetectorCompat(getContext(), new RecyclerViewGestureListener());    }    public void onPrepareOptionsMenu(Menu menu) {        super.onPrepareOptionsMenu(menu);        if(searchView != null) {            searchView.setOnSuggestionListener(this);        }    }    @Override    public boolean onQueryTextChange(String newText) {        loadData(newText);        searchView.setSuggestionsAdapter(cursorAdapter);        return true;    }    @Override    public boolean onSuggestionSelect(int position) {        return false;    }    /**     * c.getColumnNames() -> [[_id, icao]]     *     * @param position Posição clicada na lista.     * @return True     */    @Override    public boolean onSuggestionClick(int position) {        Cursor c = (Cursor) searchView.getSuggestionsAdapter().getItem(position);        String suggestion = c.getString(1);        searchView.setQuery(suggestion, true);        return true;    }    /**     *     * @param searchText código ICAO (ou vários), para efetuar a busca.     */    private void loadData(String searchText) {        String cols = "icao";        Uri uri;        if(this instanceof MetarFragment) {            uri = DbSchema.MetarSearchTable.CONTENT_URI;        } else {            uri = DbSchema.TafSearchTable.CONTENT_URI;        }        if(uri != null) {            Cursor c = getContext().getContentResolver().query(                    uri,                    new String[]{"ROWID AS " + Constants.DB_ID, cols},                    cols + " LIKE '%" + searchText + "%'",                    null,                    "ROWID DESC");            cursorAdapter.changeCursor(c);        }    }    /**     * Registra o listener.     * <p/>     * {@link CountListener}     *     * @param listener Listener     */    public void setListener(CountListener listener) {        this.listener = listener;    }}