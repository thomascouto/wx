package com.tcgr.wx.core.preference;import android.content.Context;import android.content.SharedPreferences;import android.support.v7.preference.PreferenceManager;import com.google.gson.Gson;import java.util.ArrayList;import java.util.Arrays;import java.util.List;/** * SharedPreference * Created by thomas on 25/04/16. */public class SharedPreference {    private static final String PREFS_NAME = "WX_PREFS";    private static String SELECTED;    private List<String> favorites;    private Context context;    public SharedPreference(Context context, String selected) {        this.context = context;        SELECTED = selected;    }    public SharedPreference(Context context) {        this.context = context;    }    private void saveFavorites(List<String> favorites) {        SharedPreferences settings;        SharedPreferences.Editor editor;        settings = context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);        editor = settings.edit();        Gson gson = new Gson();        String jsonFavorites = gson.toJson(favorites);        editor.putString(SELECTED, jsonFavorites);        editor.commit();    }    public boolean stationExists(String station) {        favorites = getFavorites();        return favorites.contains(station);    }    /**     * @param station CÃ³digo ICAO     * @return TRUE se for adicionado nos favoritos, FALSE caso removido.     */    public boolean toggleFavorite(String station) {        boolean isFavorite = false;        if (favorites.contains(station)) {            favorites.remove(station);        } else {            favorites.add(station);            isFavorite = true;        }        saveFavorites(favorites);        return isFavorite;    }    private ArrayList<String> getFavorites() {        String[] favoriteItems = getFavoritesArray();        if(favoriteItems == null) {            return new ArrayList<>();        } else {            favorites = Arrays.asList(favoriteItems);            favorites = new ArrayList<>(favorites);        }        return (ArrayList<String>) favorites;    }    private String[] getFavoritesArray() {        SharedPreferences settings;        settings = context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);        if (settings.contains(SELECTED)) {            String jsonFavorites = settings.getString(SELECTED, null);            Gson gson = new Gson();            return gson.fromJson(jsonFavorites, String[].class);        }        return null;    }    public String getLinearArray() {        String[] array = getFavoritesArray();        String linear = "";        if(array != null) {            for (String item: array) {                linear = linear + item + ",";            }            return linear;        }        return null;    }    public int getValue(String key) {        return PreferenceManager.getDefaultSharedPreferences(context).getInt(key, 3);    }}